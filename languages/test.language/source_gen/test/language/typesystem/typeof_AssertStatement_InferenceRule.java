package test.language.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_AssertStatement_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_AssertStatement_InferenceRule() {
  }
  public void applyRule(final SNode assertStatement, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(assertStatement, LINKS.expr$yb20);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:d77ec6bd-2726-4a33-b3e6-817456d42fbf(test.language.typesystem)", "8626454462657305821", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:d77ec6bd-2726-4a33-b3e6-817456d42fbf(test.language.typesystem)", "8626454462657302454", true), (SNode) createBooleanType_syw9wo_a1a0c0a0b(), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.AssertStatement$FW;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createBooleanType_syw9wo_a1a0c0a0b() {
    SNodeBuilder rootBuilder1 = new SNodeBuilder().init(CONCEPTS.BooleanType$T9);
    return rootBuilder1.getResult();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink expr$yb20 = MetaAdapterFactory.getContainmentLink(0x1606807dd80b4c35L, 0xb33deca189f545c2L, 0x77b752a0fdc56db1L, 0x77b752a0fdc56db2L, "expr");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept AssertStatement$FW = MetaAdapterFactory.getConcept(0x1606807dd80b4c35L, 0xb33deca189f545c2L, 0x77b752a0fdc56db1L, "test.language.structure.AssertStatement");
    /*package*/ static final SConcept BooleanType$T9 = MetaAdapterFactory.getConcept(0x7948aebf5e1b4d63L, 0xb7a7a346bd29db6dL, 0x6a57ff96e4062f5aL, "FirstLanguage.structure.BooleanType");
  }
}
